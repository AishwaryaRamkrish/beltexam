{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/child/child.component.css","webpack:///./src/app/child/child.component.html","webpack:///./src/app/child/child.component.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/app/parent/parent.component.css","webpack:///./src/app/parent/parent.component.html","webpack:///./src/app/parent/parent.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\nimport { ParentComponent } from './parent/parent.component';\n//change Routes according to wireframe.\nconst routes: Routes = [\n  {path:'movies/:id/reviews', component:HomeComponent},\n  {path:'', pathMatch:'full', redirectTo:'/movies'},\n  // {path:'movies/new', component:NewComponent},\n  {path:'movies/edit/:id', component:EditComponent},\n  {path:'movies/:id', component:DetailsComponent},\n  {path:'movies', component:ParentComponent},\n  //star routes go at the bottom!\n  { path: '**', component: ParentComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- {path:'products', component:HomeComponent},\\n  // {path:'', pathMatch:'full', redirectTo:'/products'},\\n  {path:'products/new', component:NewComponent},\\n  {path:'products/edit/:id', component:EditComponent},\\n  {path:'products/:id/details', component:DetailsComponent},\\n  {path:'parent', component:ParentComponent}, -->\\n\\n\\n<!-- <h1 class = \\\"text-success\\\">Sample Title</h1>\\n<button class = \\\"btn btn-primary\\\" [routerLink]=\\\"['/products']\\\">Go to Products</button>\\n<button class = \\\"btn btn-primary\\\" [routerLink] = \\\"['/parent']\\\">Go to Sample Parent</button>\\n<button class = \\\"btn btn-primary\\\" [routerLink] = \\\"['/products/new']\\\">Go to New</button>\\n\\n<router-outlet></router-outlet> -->\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-info\\\">\\n  <!-- <a class=\\\"navbar-brand\\\">Navbar</a> -->\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/movies']\\\">Movies</a>\\n      <!-- <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/movies/:id/reviews']\\\">Write a review</a> -->\\n      <!-- <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/products/new']\\\">New</a> -->\\n    </div>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Belt Exam- MEAN';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { EditComponent } from './edit/edit.component';\nimport { NewComponent } from './new/new.component';\nimport { DetailsComponent } from './details/details.component';\nimport { ChildComponent } from './child/child.component';\nimport { ParentComponent } from './parent/parent.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    EditComponent,\n    NewComponent,\n    DetailsComponent,\n    ChildComponent,\n    ParentComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".child{\\n    padding: 2%;\\n    margin: 2%;\\n    border: 5px solid rgb(225, 228, 86);\\n    background-color: rgb(218, 218, 230);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hpbGQvY2hpbGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsb0NBQW9DO0lBQ3BDLHFDQUFxQztDQUN4QyIsImZpbGUiOiJzcmMvYXBwL2NoaWxkL2NoaWxkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hpbGR7XG4gICAgcGFkZGluZzogMiU7XG4gICAgbWFyZ2luOiAyJTtcbiAgICBib3JkZXI6IDVweCBzb2xpZCByZ2IoMjI1LCAyMjgsIDg2KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE4LCAyMTgsIDIzMCk7XG59Il19 */\"","module.exports = \"<!-- <div class = \\\"child\\\">\\n  <h3 class = \\\"text-primary\\\">{{childVariable.title}}</h3>\\n  <div *ngFor=\\\"let x of childVariable.reviews\\\">\\n    <h5 class = \\\"text-primary\\\">Comment: {{x.comment}}</h5>\\n    <h5 class = \\\"text-primary\\\">Rating: {{x.rating}}</h5>\\n  </div>\\n  <button class = \\\"btn btn-success\\\" (click)=\\\"sendBackToParent()\\\">Go back to parent</button>\\n</div> -->\\n\\n<h1 class = \\\"text-primary\\\"> Squishy tomatoes</h1>\\n<h1 class = \\\"text-success\\\">Submit a movie and add your review!</h1>\\n<!-- sample of back end validation from component. make sure variables are defined and the message is keyed correctly on the maincontroller (dictionary key and custom string. if model doesnt contain requirements this will never show) -->\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorMessage.length > 0\\\">{{errorMessage}}</h5>\\n<!-- sample of front end validation from component (be sure boolean is defined in component and triggered on submit function) -->\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && duplicate == true\\\">Title already taken.Choose a different one!</h5>\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && newObject.title.length < 3\\\">Your title must be at least 3 characters long</h5>\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && newReview.name.length < 3\\\">Your name must be at least 3 characters long</h5>\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && newReview.comment.length < 3\\\">Your comment must be at least 3 characters long</h5>\\n\\n<!-- sample of real time validation -->\\n<h5 class=\\\"text-warning\\\" *ngIf=\\\"newObject.title.length >= 1 && newObject.title.length < 3\\\">Your title must be at least 3 characters</h5>\\n<h5 class=\\\"text-warning\\\" *ngIf=\\\"newReview.name.length >= 1 && newReview.name.length < 3\\\">Your name must be at least 3 characters</h5>\\n<h5 class=\\\"text-warning\\\" *ngIf=\\\"newReview.comment.length >= 1 && newReview.comment.length < 3\\\">Your comment must be at least 3 characters</h5>\\n\\n<div class=\\\"newObjectForm\\\">\\n  \\n  <form (submit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"title\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Movie Title:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"newObject.title\\\" [(ngModel)]=\\\"newObject.title\\\" class=\\\"form-control\\\" id=\\\"title\\\"\\n          placeholder=\\\"title\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Your name:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"newReview.name\\\" [(ngModel)]=\\\"newReview.name\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"name\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"rating\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Stars:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"text-success form-control-lg\\\" name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\">\\n          <option value=\\\"5\\\">5 Stars</option>\\n          <option value=\\\"4\\\">4 Stars</option>\\n          <option value=\\\"3\\\">3 Stars</option>\\n          <option value=\\\"2\\\">2 Stars</option>\\n          <option value=\\\"1\\\">1 Stars</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"comment\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Your reviews:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" class=\\\"form-control\\\" id=\\\"comment\\\"\\n          placeholder=\\\"comment\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"newObject.title.length < 3 || newReview.name.length < 3 || newReview.comment.length <3\\\" class=\\\"btn btn-success\\\">Submit</button>\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button> -->\\n      </div>\\n    </div>\\n  </form>\\n\\n  <!-- <button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/products']\\\">Cancel</button> -->\\n  <!-- <button class=\\\"btn btn-secondary\\\" (click)=\\\"cancel()\\\">Cancel</button> -->\\n  <button class = \\\"btn btn-success\\\" (click)=\\\"sendBackToParent()\\\">Cancel</button>\\n\\n\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.css']\n})\nexport class ChildComponent implements OnInit {\n  @Input() childVariable: any;\n  @Output() childOutputVariable = new EventEmitter();\n  newObject: any;\n  newReview: any;\n  showall: any;\n  errorBoolean = false;\n  errorMessage = \"\";\n  duplicate = false;\n  delete_disable = false;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.newObject = { title: \"\", reviews: [] }\n    this.newReview = { rating: 5, name: \"\", comment: \"\" }\n    this.showall = [];\n    this.getAllObjects();\n  }\n  sendBackToParent() {\n    this.childOutputVariable.emit(true);\n    // this.getAllObjects();\n  }\n  getAllObjects() {\n    var observable = this._httpService.getPrimaries();\n    observable.subscribe(data => {\n      console.log(data);\n      this.showall = data['data'];\n      console.log('this.showall: ', this.showall);\n      console.log('this.showall.length: ', this.showall.length);\n      console.log('this.showall[0].title: ', this.showall[0].title);\n    });\n  }\n  checkingDuplicate() {\n    for (var i = 0; i < this.showall.length; i++) {\n      if (this.showall[i].title === this.newObject.title) {\n        this.duplicate = true;\n        console.log('this.newObject.title: ', this.newObject.title);\n      }\n    }\n  }\n  onSubmit() {\n    this.checkingDuplicate();\n    if (this.newObject.title.length < 3 || this.newReview.name.length < 3 || this.newReview.comment.length < 3 || this.duplicate === true) {\n      this.errorBoolean = true;\n    }\n    else {\n      //this will create the object with an initial review\n      this.newObject.reviews.push(this.newReview);\n      let observable = this._httpService.addNew(this.newObject);\n      observable.subscribe(data => {\n        console.log(data);\n        if (data['errorMsg']) {\n          this.errorMessage = data['errorMsg']\n        } else {\n          // setTimeout(function(){this.delete_disable = true}, 5000);\n          // this._router.navigate(['/parent']);\n          this.getAllObjects();\n          this.newObject = { title: \"\", name: \"\", rating: 5, comment: \"\" };\n          this.sendBackToParent();\n          this._router.navigate(['/']);\n          // this.getAllObjects();\n        }\n      })\n    }\n  }\n  // cancel(){\n  //   this.start_bool = false;\n  // }\n\n  // //sample of regular observable with routing after data comes back (no validation)\n  // onSubmit() {\n  //   let observable = this._httpService.addNew(this.newObject);\n  //   observable.subscribe(data => {\n  //     console.log(data);\n  //     this._router.navigate(['/products'])\n  //   })\n  // }\n  // // front-end validation (you can add more fields to check with else if)\n  // onSubmit() {\n  //   if (this.newObject.title.length < 3) {\n  //     this.errorBoolean = true;\n  //   } else {\n  //     //this will create the object with an initial review\n  //     this.newObject.reviews.push(this.newReview);\n  //     let observable = this._httpService.addNew(this.newObject);\n  //     observable.subscribe(data => {\n  //       console.log(data);\n  //       this._router.navigate(['/products'])\n  //     })\n  //   }\n  // }\n  // //sample of detecting errorMsg on mainController and setting errorMessage variable here to be that message for front-end rendering;\n  // onSubmit() {\n  //     //this will create the object with an initial review\n  //     this.newObject.reviews.push(this.newReview);\n  //     let observable = this._httpService.addNew(this.newObject);\n  //     observable.subscribe(data => {\n  //       console.log(data);\n  //       if (data['errorMsg']) {\n  //         this.errorMessage = data['errorMsg']\n  //       } else {\n  //         this._router.navigate(['/products'])\n  //       }\n  //     })\n  //   }\n\n  // }\n\n}\n","module.exports = \".ratingForm{\\n    padding: 2%;\\n    margin: 2%;\\n    border: 5px solid rgb(62, 161, 62);\\n    background-color: rgb(218, 218, 230);\\n}\\n.showone{\\n    /* padding: 5%; */\\n    margin: 2% 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLG1DQUFtQztJQUNuQyxxQ0FBcUM7Q0FDeEM7QUFDRDtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0NBQ2xCIiwiZmlsZSI6InNyYy9hcHAvZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmF0aW5nRm9ybXtcbiAgICBwYWRkaW5nOiAyJTtcbiAgICBtYXJnaW46IDIlO1xuICAgIGJvcmRlcjogNXB4IHNvbGlkIHJnYig2MiwgMTYxLCA2Mik7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIxOCwgMjE4LCAyMzApO1xufVxuLnNob3dvbmV7XG4gICAgLyogcGFkZGluZzogNSU7ICovXG4gICAgbWFyZ2luOiAyJSAxMCU7XG59Il19 */\"","module.exports = \"<!-- <h1>Average: {{shownObject.average}}</h1>\\n<table>\\n  <thead>\\n    <tr>\\n      <th>Review</th>\\n      <th>Rating</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let x of shownObject.reviews\\\">\\n      <td>{{x.comment}}</td>\\n      <td>{{x.rating}}</td>\\n      <td>\\n        <button (click)=\\\"onDelete(x)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<form (submit)=\\\"onSubmit()\\\">\\n  <label>Rating</label>\\n  <select name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\">\\n    <option value=\\\"5\\\">5 Stars</option>\\n    <option value=\\\"4\\\">4 Stars</option>\\n    <option value=\\\"3\\\">3 Stars</option>\\n    <option value=\\\"2\\\">2 Stars</option>\\n    <option value=\\\"1\\\">1 Stars</option>\\n  </select>\\n  <label>Comment</label>\\n  <textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\"></textarea>\\n  <button type=\\\"submit\\\">Submit</button>\\n</form> -->\\n\\n\\n\\n<h1 class = \\\"text-primary\\\"> Squishy tomatoes</h1>\\n<button class=\\\"btn btn-danger\\\" (click)=\\\"movieDelete()\\\">Delete</button>\\n<div *ngIf=\\\"shownObject.reviews.length != 0\\\">\\n  <h1 class=\\\"text-primary\\\">Average: {{shownObject.average}}</h1>\\n</div>\\n<div class=\\\"showone\\\">\\n  <h1 class = \\\"text-success\\\"> Reviews for {{shownObject.title}}</h1>\\n  <table class=\\\"table table-bordered table-striped table-hover\\\">\\n    <thead>\\n      <tr class=\\\"table-success\\\">\\n        <th scope=\\\"col\\\">Reviewer</th>\\n        <th scope=\\\"col\\\">Stars</th>\\n        <th scope=\\\"col\\\">Reviews</th>\\n        <th scope=\\\"col\\\">Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let x of shownObject.reviews\\\">\\n        <td>{{x.name}}</td>\\n        <td>{{x.rating}}</td>\\n        <td>{{x.comment}}</td>\\n        <td>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"onDelete(x)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n\\n<!-- <h5 *ngIf = \\\"this.newReview.comment.length > 0 && this.newReview.comment.length < 3\\\" class=\\\"text-danger\\\">Comment field should be atleast 3 characters!</h5>\\n<div class=\\\"ratingForm\\\">\\n  <form (submit)=\\\"onSubmit()\\\">\\n    <h5 *ngIf = \\\"this.newReview.comment.length<3 && err_bool == true\\\">Sorry!Comment field should be atleast 3 characters!</h5>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"rating\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Rating:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"text-success form-control-lg\\\" name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\">\\n          <option value=\\\"5\\\">5 Stars</option>\\n          <option value=\\\"4\\\">4 Stars</option>\\n          <option value=\\\"3\\\">3 Stars</option>\\n          <option value=\\\"2\\\">2 Stars</option>\\n          <option value=\\\"1\\\">1 Stars</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"comment\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Comment:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" class=\\\"form-control\\\" id=\\\"comment\\\"\\n          placeholder=\\\"comment\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n        <button class=\\\"btn btn-warning\\\" type=\\\"submit\\\">Submit</button>\\n\\n      </div>\\n    </div>\\n  </form>\\n  <button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/movies']\\\">Cancel</button>\\n</div> -->\\n\\n\\n\\n\\n\\n\\n        <!-- <button type=\\\"submit\\\" [disabled]=\\\"newObject.title.length < 3 || newObject.url.length < 3\\\" class=\\\"btn btn-success\\\">Submit</button> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  newReview: any;\n  shownObject: any;\n  err_bool: boolean = false;\n  selectedObject:any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  ngOnInit() {\n    this.newReview = { rating: 5, comment: \"\" }\n    this.shownObject = { title: \"\", url: \"\", reviews: [] }\n    // this.err_bool= false;\n    this.getShownObject();\n  }\n  getShownObject() {\n    let observable = this._httpService.getPrimary(this._route.snapshot.params.id);\n    observable.subscribe(data => {\n      this.shownObject = data['data']\n      //reviews is an array\n      var sum = 0;\n      for (var i = 0; i < this.shownObject.reviews.length; i++) {\n        sum += this.shownObject.reviews[i].rating;\n      }\n      this.shownObject.average = sum / this.shownObject.reviews.length;\n      this.shownObject.reviews = this.shownObject.reviews.sort(this._httpService.dynamicSort(\"-rating\"));\n    })\n  }\n  onSubmit() {\n    if (this.newReview.comment.length < 3) {\n      this.err_bool = true;\n      // this.getShownObject();\n    }\n    else {\n      this.err_bool = false;\n\n      let observable = this._httpService.addSecondary(this._route.snapshot.params.id, this.newReview);\n      observable.subscribe(data => {\n        this.getShownObject();\n        this.newReview = { rating: 5, comment: \"\" };\n      });\n    }\n  }\n  movieDelete() {\n    let observable = this._httpService.deletePrimary(this.shownObject._id);\n    observable.subscribe(data => {\n      // this.getObjects();\n      // this.getShownObject()\n      this.selectedObject = null;\n      this._router.navigate(['/movies']);\n    });\n  }\n  onDelete(reviewObject) {\n    for (var i = 0; i < this.shownObject.reviews.length; i++) {\n      if (reviewObject._id === this.shownObject.reviews[i]._id) {\n        var temp = this.shownObject.reviews[i];\n        this.shownObject.reviews[i] = this.shownObject.reviews[this.shownObject.reviews.length - 1];\n        this.shownObject.reviews[this.shownObject.reviews.length - 1] = temp;\n        this.shownObject.reviews.pop();\n      }\n    }\n    let observable = this._httpService.deleteSecondary(this.shownObject._id, this.shownObject);\n    observable.subscribe(data => {\n      console.log(\"Successfully deleted the review!!!\", data);\n      this.getShownObject();\n\n    });\n  }\n}\n","module.exports = \".editingObjectForm{\\n    padding: 5%;\\n    margin: 2%;\\n    border: 5px solid rgb(151, 55, 170);\\n    background-color: rgb(218, 218, 230);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC9lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLG9DQUFvQztJQUNwQyxxQ0FBcUM7Q0FDeEMiLCJmaWxlIjoic3JjL2FwcC9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lZGl0aW5nT2JqZWN0Rm9ybXtcbiAgICBwYWRkaW5nOiA1JTtcbiAgICBtYXJnaW46IDIlO1xuICAgIGJvcmRlcjogNXB4IHNvbGlkIHJnYigxNTEsIDU1LCAxNzApO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyMTgsIDIxOCwgMjMwKTtcbn0iXX0= */\"","module.exports = \"<!-- <h1>Editing {{editingObject.title}}</h1>\\n<form (submit)=\\\"onSubmit()\\\">\\n  <label>Title</label>\\n  <input type=\\\"text\\\" name=\\\"editingObject.title\\\" [(ngModel)]=\\\"editingObject.title\\\">\\n  <label>Url</label>\\n  <input type=\\\"text\\\" name=\\\"editingObject.url\\\" [(ngModel)]=\\\"editingObject.url\\\">\\n  <button type=\\\"submit\\\">Submit</button>\\n</form> -->\\n\\n<h1 class=\\\"text-success\\\">Editing the object!</h1>\\n<div class=\\\"editingObjectForm\\\">\\n  <h2 class=\\\"text-info\\\">Editing {{editingObject.title}}</h2>\\n  <hr>\\n  <!-- After submitting form validation -->\\n  <h5 class=\\\"text-danger\\\" *ngIf = \\\"err_bool === true && edit_duplicate === true\\\">Title already taken.Edit with a different one!</h5>\\n  <h5 class=\\\"text-danger\\\" *ngIf = \\\"err_bool === true && editingObject.title.length < 3 \\\">Title must be atleast 3 characters long!</h5>\\n  <h5 class=\\\"text-danger\\\" *ngIf = \\\"err_bool === true && editingObject.url.length < 3 \\\">Url must be atleast 3 characters long!</h5>\\n\\n  <!-- Real time form validation -->\\n  <h5 class=\\\"text-warning\\\" *ngIf = \\\"editingObject.title.length >= 1 && editingObject.title.length < 3\\\">Warning: The title must be atleast 3 characters long!</h5>\\n  <h5 class=\\\"text-warning\\\" *ngIf = \\\"editingObject.url.length >= 1 && editingObject.url.length < 3\\\">Warning: The url must be atleast 3 characters long!</h5>\\n  <form (submit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"title\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Title</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"editingObject.title\\\" [(ngModel)]=\\\"editingObject.title\\\" class=\\\"form-control\\\" id=\\\"title\\\"\\n          placeholder=\\\"title\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"url\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Url</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"editingObject.url\\\" [(ngModel)]=\\\"editingObject.url\\\" class=\\\"form-control\\\" id=\\\"url\\\"\\n          placeholder=\\\"url\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n        <!-- <button type=\\\"submit\\\" [disabled]=\\\"editingObject.title.length < 3 || editingObject.url.length < 3\\\" class=\\\"btn btn-success\\\">Submit</button> -->\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button>\\n      </div>\\n    </div>\\n  </form>\\n  <button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/movies']\\\">Cancel</button>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  editingObject: any;\n  err_bool = false;\n  edit_duplicate = false;\n  showall:any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  ngOnInit() {\n    //this will just avoid error (make sure it is first before the function for getting things);\n    this.editingObject = { title: \"\", url: \"\", reviews: [] }\n    this.showall = [];\n    this.a_getAllObjects();\n    this.getSpecificObject();\n    \n  }\n  getSpecificObject() {\n    let observable = this._httpService.getPrimary(this._route.snapshot.params.id);\n    observable.subscribe(data => {\n      this.editingObject = data['data'];\n    })\n  }\n  a_getAllObjects() {\n    var observable = this._httpService.getPrimaries();\n    observable.subscribe(data => {\n      console.log(data);\n      this.showall = data['data'];\n      console.log('this.showall: ', this.showall);\n      console.log('this.showall.length: ', this.showall.length);\n    });\n  }\n  checkingDuplicate() {\n    for (var i = 0; i < this.showall.length; i++) {\n      if (this.showall[i]._id != this.editingObject._id && this.showall[i].title === this.editingObject.title) {\n        this.edit_duplicate = true;\n        console.log('this.editingObject.title: ', this.editingObject.title);\n      }\n    }\n  }\n  onSubmit() {\n    this.checkingDuplicate();\n    if (this.editingObject.title.length < 3 || this.editingObject.url.length < 3 || this.edit_duplicate == true) {\n      this.err_bool = true;\n    }\n    else {\n      //when editing double check if the right fields are being updated on the controller.\n      let observable = this._httpService.editPrimary(this._route.snapshot.params.id, this.editingObject);\n      observable.subscribe(data => {\n        console.log(data);\n        this._router.navigate(['/movies']);\n        // this.editingObject = data['data'];\n      });\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- {{shownObject | json }} -->\\n<h1 class = \\\"text-primary\\\"> Squishy tomatoes</h1>\\n<h5 *ngIf=\\\"newReview.comment.length > 0 && newReview.comment.length < 3\\\" class=\\\"text-danger\\\">Review field\\n  should be atleast 3 characters!</h5>\\n<h5 *ngIf=\\\"this.newReview.name.length > 0 && this.newReview.name.length < 3\\\" class=\\\"text-warning\\\">Name field\\n  should be atleast 3 characters!</h5>\\n\\n<div class=\\\"ratingForm\\\">\\n  <h1 class = \\\"text-success\\\"> Add a review for {{shownObject.title}}</h1>\\n  <form (submit)=\\\"onSubmit()\\\">\\n    <h5 *ngIf=\\\"this.newReview.comment.length<3 && err_bool == true\\\">Sorry!Comment field should be atleast 3 characters!</h5>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Your Name:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"newReview.name\\\" [(ngModel)]=\\\"newReview.name\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n          placeholder=\\\"name\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"rating\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Stars:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"text-success form-control-lg\\\" name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\">\\n          <option value=\\\"5\\\">5 Stars</option>\\n          <option value=\\\"4\\\">4 Stars</option>\\n          <option value=\\\"3\\\">3 Stars</option>\\n          <option value=\\\"2\\\">2 Stars</option>\\n          <option value=\\\"1\\\">1 Stars</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"comment\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Your Review:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" class=\\\"form-control\\\" id=\\\"comment\\\"\\n          placeholder=\\\"comment\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n        <!-- <button class=\\\"btn btn-warning\\\" type=\\\"submit\\\">Submit</button> -->\\n        <button type=\\\"submit\\\" [disabled]=\\\"newReview.comment.length < 3 || newReview.name.length < 3\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n\\n      </div>\\n    </div>\\n  </form>\\n  <button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/movies/',shownObject._id]\\\">Cancel</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  newReview: any;\n  shownObject: any;\n  err_bool: boolean = false;\n  selectedObject:any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    // this.getShownObject();\n    this.newReview = { rating: 5, name: \"\",comment: \"\" }\n    this.shownObject = { title: \"\", reviews: [] }\n    // this.err_bool= false;\n    this.getShownObject();\n  }\n  getShownObject() {\n    let observable = this._httpService.getPrimary(this._route.snapshot.params.id);\n    observable.subscribe(data => {\n      this.shownObject = data['data']\n      //reviews is an array\n      var sum = 0;\n      for (var i = 0; i < this.shownObject.reviews.length; i++) {\n        sum += this.shownObject.reviews[i].rating;\n      }\n      this.shownObject.average = sum / this.shownObject.reviews.length;\n      this.shownObject.reviews = this.shownObject.reviews.sort(this._httpService.dynamicSort(\"-rating\"));\n    })\n  }\n  onSubmit() {\n    if (this.newReview.comment.length < 3 || this.newReview.comment.length < 3) {\n      this.err_bool = true;\n      // this.getShownObject();\n    }\n    else {\n      this.err_bool = false;\n\n      let observable = this._httpService.addSecondary(this._route.snapshot.params.id, this.newReview);\n      observable.subscribe(data => {\n        this.getShownObject();\n        this.newReview = { rating: 5, name: \"\", comment: \"\" };\n        this._router.navigate(['/movies/'+ this.shownObject['_id']]);\n      });\n    }\n  }\n  movieDelete() {\n    let observable = this._httpService.deletePrimary(this.shownObject._id);\n    observable.subscribe(data => {\n      // this.getObjects();\n      // this.getShownObject()\n      this.selectedObject = null;\n      this._router.navigate(['/movies']);\n    });\n  }\n  onDelete(reviewObject) {\n    for (var i = 0; i < this.shownObject.reviews.length; i++) {\n      if (reviewObject._id === this.shownObject.reviews[i]._id) {\n        var temp = this.shownObject.reviews[i];\n        this.shownObject.reviews[i] = this.shownObject.reviews[this.shownObject.reviews.length - 1];\n        this.shownObject.reviews[this.shownObject.reviews.length - 1] = temp;\n        this.shownObject.reviews.pop();\n      }\n    }\n    let observable = this._httpService.deleteSecondary(this.shownObject._id, this.shownObject);\n    observable.subscribe(data => {\n      console.log(\"Successfully deleted the review!!!\", data);\n      this.getShownObject();\n\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n    constructor(private _http: HttpClient) { }\n\n    getPrimaries() {\n        return this._http.get('/objects');\n    }\n    getPrimary(id) {\n        return this._http.get('/object/' + id);\n    }\n    addNew(newPrimary) {\n        return this._http.post('/newObject', newPrimary)\n    }\n    addSecondary(id, editedSecondary) {\n        return this._http.put('/newReview/' + id, editedSecondary)\n    }\n    editPrimary(id, editedPrimary) {\n        return this._http.put('/editObject/' + id, editedPrimary)\n    }\n    deletePrimary(id) {\n        return this._http.delete('/remove/' + id)\n    }\n    deleteSecondary(id, updatedPrimary) {\n        return this._http.put('/removeSecondary/' + id, updatedPrimary);\n    }\n    dynamicSort(property) {\n        var sortOrder = 1;\n        if (property[0] === \"-\") {\n            sortOrder = -1;\n            property = property.substr(1);\n        }\n        return function (a, b) {\n            var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n            return result * sortOrder;\n        }\n    }\n}\n","module.exports = \".newObjectForm{\\n    padding: 5%;\\n    margin: 2%;\\n    border: 5px solid rgb(216, 134, 28);\\n    background-color: rgb(218, 218, 230);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3L25ldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxvQ0FBb0M7SUFDcEMscUNBQXFDO0NBQ3hDIiwiZmlsZSI6InNyYy9hcHAvbmV3L25ldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5ld09iamVjdEZvcm17XG4gICAgcGFkZGluZzogNSU7XG4gICAgbWFyZ2luOiAyJTtcbiAgICBib3JkZXI6IDVweCBzb2xpZCByZ2IoMjE2LCAxMzQsIDI4KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjE4LCAyMTgsIDIzMCk7XG59Il19 */\"","module.exports = \"<!-- sample of back end validation from component. make sure variables are defined and the message is keyed correctly on the maincontroller (dictionary key and custom string. if model doesnt contain requirements this will never show) -->\\n<!-- <p *ngIf=\\\"errorMessage.length > 0\\\">{{errorMessage}}</p> -->\\n<!-- sample of front end validation from component (be sure boolean is defined in component and triggered on submit function) -->\\n<!-- <p *ngIf=\\\"errorBoolean == true\\\">Your title must be at least 3 characters long</p> -->\\n<!-- sample of real time validation -->\\n<!-- <p *ngIf=\\\"newObject.title.length >= 1 && newObject.title.length < 3\\\">Your title must be at least 3 characters</p> -->\\n\\n<!-- <form (submit)=\\\"onSubmit()\\\">\\n  <label>Title</label>\\n  <input type=\\\"text\\\" name=\\\"newObject.title\\\" [(ngModel)]=\\\"newObject.title\\\">\\n  <label>url</label>\\n  <input type=\\\"text\\\" name=\\\"newObject.url\\\" [(ngModel)]=\\\"newObject.url\\\">\\n\\n  <label class=\\\"text-success\\\">Rating</label>\\n  <select class=\\\"text-success form-control-lg\\\" name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\">\\n    <option value=\\\"5\\\">5 Stars</option>\\n    <option value=\\\"4\\\">4 Stars</option>\\n    <option value=\\\"3\\\">3 Stars</option>\\n    <option value=\\\"2\\\">2 Stars</option>\\n    <option value=\\\"1\\\">1 Stars</option>\\n  </select>\\n  <label>Comment</label>\\n  <textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\"></textarea>\\n  <button type=\\\"submit\\\" [disabled]=\\\"newObject.title.length < 3 || newObject.url.length < 3\\\">Submit</button>\\n</form>\\n<button [routerLink]=\\\"['/products']\\\">Cancel</button> -->\\n\\n\\n\\n<h1 class=\\\"text-success\\\">Create a new object!</h1>\\n<!-- sample of back end validation from component. make sure variables are defined and the message is keyed correctly on the maincontroller (dictionary key and custom string. if model doesnt contain requirements this will never show) -->\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorMessage.length > 0\\\">{{errorMessage}}</h5>\\n<!-- sample of front end validation from component (be sure boolean is defined in component and triggered on submit function) -->\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && duplicate == true\\\">Title already taken.Choose a different one!</h5>\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && newObject.title.length < 3\\\">Your title must be at least 3 characters long</h5>\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && newObject.name.length < 3\\\">Your name must be at least 3 characters long</h5>\\n<h5 class=\\\"text-danger\\\" *ngIf=\\\"errorBoolean == true && newReview.comment.length < 3\\\">Your comment must be at least 3 characters long</h5>\\n\\n<!-- sample of real time validation -->\\n<h5 class=\\\"text-warning\\\" *ngIf=\\\"newObject.title.length >= 1 && newObject.title.length < 3\\\">Your title must be at least 3 characters</h5>\\n<h5 class=\\\"text-warning\\\" *ngIf=\\\"newObject.name.length >= 1 && newObject.name.length < 3\\\">Your name must be at least 3 characters</h5>\\n<h5 class=\\\"text-warning\\\" *ngIf=\\\"newReview.comment.length >= 1 && newReview.comment.length < 3\\\">Your comment must be at least 3 characters</h5>\\n\\n<div class=\\\"newObjectForm\\\">\\n  <form (submit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"title\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Movie Title:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"newObject.title\\\" [(ngModel)]=\\\"newObject.title\\\" class=\\\"form-control\\\" id=\\\"title\\\"\\n          placeholder=\\\"title\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Your name:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" name=\\\"newObject.name\\\" [(ngModel)]=\\\"newObject.name\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"name\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"rating\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Stars:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"text-success form-control-lg\\\" name=\\\"newReview.rating\\\" [(ngModel)]=\\\"newReview.rating\\\">\\n          <option value=\\\"5\\\">5 Stars</option>\\n          <option value=\\\"4\\\">4 Stars</option>\\n          <option value=\\\"3\\\">3 Stars</option>\\n          <option value=\\\"2\\\">2 Stars</option>\\n          <option value=\\\"1\\\">1 Stars</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"comment\\\" class=\\\"col-sm-2 col-form-label\\\">\\n        <h4 class=\\\"text-primary\\\">Your Review:</h4>\\n      </label>\\n      <div class=\\\"col-sm-10\\\">\\n        <textarea name=\\\"newReview.comment\\\" [(ngModel)]=\\\"newReview.comment\\\" class=\\\"form-control\\\" id=\\\"comment\\\"\\n          placeholder=\\\"comment\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"newObject.title.length < 3 || newObject.name.length < 3 || newReview.comment.length <3\\\" class=\\\"btn btn-success\\\">Submit</button>\\n        <!-- <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Submit</button> -->\\n      </div>\\n    </div>\\n  </form>\\n\\n  <button class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/parent']\\\">Cancel</button>\\n\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n  \n  newObject: any;\n  newReview: any;\n  showall: any;\n  errorBoolean = false;\n  errorMessage = \"\";\n  duplicate = false;\n  delete_disable = false;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n\n  ngOnInit() {\n    this.newObject = { title: \"\", reviews: [] }\n    this.newReview = { rating: 5, name:\"\", comment: \"\" }\n    this.showall = [];\n    this.getAllObjects();\n\n  }\n  getAllObjects() {\n    var observable = this._httpService.getPrimaries();\n    observable.subscribe(data => {\n      console.log(data);\n      this.showall = data['data'];\n      console.log('this.showall: ', this.showall);\n      console.log('this.showall.length: ', this.showall.length);\n      console.log('this.showall[0].title: ', this.showall[0].title);\n    });\n  }\n  checkingDuplicate() {\n    for (var i = 0; i < this.showall.length; i++) {\n      if (this.showall[i].title === this.newObject.title) {\n        this.duplicate = true;\n        console.log('this.newObject.title: ', this.newObject.title);\n      }\n    }\n  }\n  onSubmit() {\n    this.checkingDuplicate();\n    if (this.newObject.title.length < 3 || this.newObject.url.length < 3 || this.newReview.comment.length < 3 || this.duplicate === true) {\n      this.errorBoolean = true;\n    }\n    else {\n      //this will create the object with an initial review\n      this.newObject.reviews.push(this.newReview);\n      let observable = this._httpService.addNew(this.newObject);\n      observable.subscribe(data => {\n        console.log(data);\n        if (data['errorMsg']) {\n          this.errorMessage = data['errorMsg']\n        } else {\n          // setTimeout(function(){this.delete_disable = true}, 5000);\n          this._router.navigate(['/parent']);\n        }\n      })\n    }\n\n  }\n  // //sample of regular observable with routing after data comes back (no validation)\n  // onSubmit() {\n  //   let observable = this._httpService.addNew(this.newObject);\n  //   observable.subscribe(data => {\n  //     console.log(data);\n  //     this._router.navigate(['/products'])\n  //   })\n  // }\n  // // front-end validation (you can add more fields to check with else if)\n  // onSubmit() {\n  //   if (this.newObject.title.length < 3) {\n  //     this.errorBoolean = true;\n  //   } else {\n  //     //this will create the object with an initial review\n  //     this.newObject.reviews.push(this.newReview);\n  //     let observable = this._httpService.addNew(this.newObject);\n  //     observable.subscribe(data => {\n  //       console.log(data);\n  //       this._router.navigate(['/products'])\n  //     })\n  //   }\n  // }\n  // //sample of detecting errorMsg on mainController and setting errorMessage variable here to be that message for front-end rendering;\n  // onSubmit() {\n  //     //this will create the object with an initial review\n  //     this.newObject.reviews.push(this.newReview);\n  //     let observable = this._httpService.addNew(this.newObject);\n  //     observable.subscribe(data => {\n  //       console.log(data);\n  //       if (data['errorMsg']) {\n  //         this.errorMessage = data['errorMsg']\n  //       } else {\n  //         this._router.navigate(['/products'])\n  //       }\n  //     })\n  //   }\n\n  // }\n}\n","module.exports = \".showall{\\n    margin: 2% 5%;   \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFyZW50L3BhcmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztDQUNqQiIsImZpbGUiOiJzcmMvYXBwL3BhcmVudC9wYXJlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaG93YWxse1xuICAgIG1hcmdpbjogMiUgNSU7ICAgXG59Il19 */\"","module.exports = \"<!-- <table>\\n  <thead>\\n    <tr>\\n      <th>Object</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let x of listOfObjects\\\">\\n      <td>{{x.title}}</td>\\n      <td>\\n        <button (click)=\\\"onSelectForChild(x)\\\">Give to Child</button>\\n        <button (click)=\\\"onShow(x)\\\">Show</button>\\n        <button (click)=\\\"onEdit(x)\\\">Edit</button>\\n        <button (click)=\\\"onDelete(x)\\\">Delete</button>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table> -->\\n\\n\\n<h1 class=\\\"text-primary\\\"> Squishy tomatoes</h1>\\n<div class=\\\"showall\\\">\\n  <h1 class=\\\"text-success\\\"> Movie List</h1>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"onSelectForChild()\\\">Add a New Movie</button>\\n  <table class=\\\"table table-hover table-striped table-dark table-bordered\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Movie Title</th>\\n        <!-- <th scope=\\\"col\\\">Average</th> -->\\n        <th scope=\\\"col\\\">Available Actions</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let x of listOfObjects\\\">\\n        <td>{{x.title}}</td>\\n        <!-- <td></td> -->\\n        <td>\\n          <!-- <button class=\\\"btn btn-primary\\\" (click)=\\\"onSelectForChild(x)\\\">New</button> -->\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"onShow(x)\\\">Read reviews</button>\\n          <!-- <button class=\\\"btn btn-warning\\\" (click)=\\\"onEdit(x)\\\">Edit a movie</button> -->\\n          <button class=\\\"btn btn-primary\\\" (click)=\\\"onReview(x)\\\">Write a review</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<!-- <app-child *ngIf=\\\"selectedObject != null\\\" [childVariable]=\\\"selectedObject\\\" (childOutputVariable)=\\\"ReceivedChildMessage($event)\\\"></app-child> -->\\n<app-child *ngIf=\\\"start_bool === true\\\" [childVariable]=\\\"listOfObjects\\\" (childOutputVariable)=\\\"ReceivedChildMessage($event)\\\"></app-child>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.css']\n})\nexport class ParentComponent implements OnInit {\n  @Input() delete_enable = false;\n  @Output() delete_disable = new EventEmitter();\n  start_bool = false;\n  listOfObjects:any;\n  selectedObject:any;\n  shownObject:any;\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) { }\n  ngOnInit() {\n    this.getObjects();\n  }\n  getObjects(){\n    let observable = this._httpService.getPrimaries();\n    observable.subscribe(data => {\n      // this.listOfObjects = data['data']\n\n      this.listOfObjects = data['data'].sort(this._httpService.dynamicSort(\"title\"));\n    });\n  }\n  // getShownObject() {\n  //   let observable = this._httpService.getPrimary(this._route.snapshot.params.id);\n  //   observable.subscribe(data => {\n  //     this.shownObject = data['data']\n  //     //reviews is an array\n  //     var sum = 0;\n  //     for (var i = 0; i < this.shownObject.reviews.length; i++) {\n  //       sum += this.shownObject.reviews[i].rating;\n  //     }\n  //     this.shownObject.average = sum / this.shownObject.reviews.length;\n  //     // this.shownObject.reviews = this.shownObject.reviews.sort(this._httpService.dynamicSort(\"-rating\"));\n  //   })\n  // }\n\n  onShow(x){\n    this._router.navigate(['/movies/',x._id]);\n  }\n  onEdit(x){\n    this._router.navigate(['/movies/edit',x._id]);\n  }\n  onReview(x){\n    this._router.navigate(['/movies/'+x._id+'/reviews']);\n  }\n  movieDelete(x){\n    let observable = this._httpService.deletePrimary(x._id);\n    observable.subscribe(data => {\n      this.getObjects();\n      this.selectedObject = null;\n    });\n  }\n  onSelectForChild(){\n    // this.selectedObject = x;\n    this.start_bool = true;\n    // this.getObjects();\n  }\n  ReceivedChildMessage(event){\n    if(event == true){\n      this.start_bool = false;\n      this.getObjects();\n      \n      // this.selectedObject = null;\n      //you can also run other functions to refresh the parent's lists and whatever\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}